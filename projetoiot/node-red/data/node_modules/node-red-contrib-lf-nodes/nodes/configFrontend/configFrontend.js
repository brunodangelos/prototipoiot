module.exports = function(RED) {
  var fetch = require('node-fetch')

  function configFrontend(config) {
    RED.nodes.createNode(this, config)
    var context = this.context().global
    this.ID = config.ID
    this.URL = config.URL
    this.username = config.username
    this.password = config.password
    this.frontendURL = config.frontendURL
    this.configuration = config.configuration
    var node = this
    this.on('input', function(msg) {
      var defaultURL = 'https://lf.aexol.com/graphql' // 'http://localhost:8080/graphql'
      const query = `query {
        login(user: {
          username:  "${node.username}",
          password:  "${node.password}",
        })
      }`
      fetch(node.URL || defaultURL, {
        method: 'POST',
        mode: 'cors',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          query: query
        })
      })
      .then(resp => resp.json())
      .then(resp2 => {
        const token = resp2.data.login
        let address = node.frontendURL

        if (token) {
          if (address.substr(-1) === "/") {
            address = `${address}?token=${token}`
          } else {
            address = `${address}/?token=${token}`
          }
        }

        if (node.configuration) {
          if (address.indexOf("?") > -1) {
            address = `${address}&configuration=${node.configuration}`
          } else {
            if (address.substr(-1) === "/") {
              address = `${address}?configuration=${node.configuration}`
            } else {
              address = `${address}/?configuration=${node.configuration}`
            }
          }
        }

        msg.payload = address
        node.send(msg)
      })
      .catch(err => node.log(err))
    })
  }
  RED.nodes.registerType("configFrontend", configFrontend)
}